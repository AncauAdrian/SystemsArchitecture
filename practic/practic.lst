     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, printf, scanf, fopen, fwrite, fclose         
     6                                  import exit msvcrt.dll    
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fwrite msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  
    13                                  
    14                                  segment data use32 class=data
    15 00000000 00000000                    n dd 0
    16 00000004 256400                      format_n db "%d", 0
    17 00000007 000000000000000000-         cuvant db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    17 00000010 000000000000000000-
    17 00000019 000000000000000000-
    17 00000022 000000000000000000-
    17 0000002B 000000000000       
    18                                      len_cuvant equ ($-cuvant)
    19 00000031 6165696F7500                vocal db "aeiou", 0
    20                                      len_vocal equ ($-vocal)
    21 00000037 257300                      format_cuvant db "%s", 0
    22 0000003A 637576696E74652E74-         file_name db "cuvinte.txt", 0
    22 00000043 787400             
    23 00000046 7700                        mode db "w", 0
    24 00000048 00000000                    file_descriptor dd 0
    25 0000004C 257300                      file_format db "%s", 0
    26                                  
    27                                  segment code use32 class=code      
    28                                      start:
    29 00000000 68[46000000]                    push dword mode
    30 00000005 68[3A000000]                    push dword file_name
    31 0000000A FF15[00000000]                  call [fopen]
    32 00000010 83C408                          add esp, 4*2
    33                                          
    34 00000013 A3[48000000]                    mov [file_descriptor], eax
    35                                          
    36 00000018 68[00000000]                    push dword n
    37 0000001D 68[04000000]                    push dword format_n
    38 00000022 FF15[00000000]                  call [scanf]
    39 00000028 83C408                          add esp, 4*2
    40                                          
    41                                          for:
    42 0000002B BA00000000                          mov edx, 0
    43 00000030 68[07000000]                        push dword cuvant
    44 00000035 68[37000000]                        push dword format_cuvant
    45 0000003A FF15[00000000]                      call [scanf]
    46 00000040 83C408                              add esp, 4*2
    47                                              
    48 00000043 A0[07000000]                        mov al, [cuvant]
    49 00000048 3C23                                cmp al, '#'
    50 0000004A 7463                                jz finish
    51                                              
    52 0000004C B800000000                          mov eax, 0
    53 00000051 BE[07000000]                        mov esi, cuvant
    54 00000056 B92A000000                          mov ecx, len_cuvant
    55 0000005B FC                                  cld
    56                                              
    57                                              for_cuvant:
    58 0000005C AC                                      lodsb
    59 0000005D 89C3                                    mov ebx, eax
    60 0000005F 56                                      push esi
    61 00000060 51                                      push ecx
    62                                                  
    63 00000061 BE[31000000]                            mov esi, vocal
    64 00000066 FC                                      cld
    65 00000067 B906000000                              mov ecx, len_vocal
    66                                                  for_vocala:
    67 0000006C AC                                          lodsb
    68 0000006D 51                                          push ecx
    69 0000006E B906000000                                  mov ecx, len_vocal
    70                                              
    71                                                      while:
    72 00000073 AC                                              lodsb
    73 00000074 38D8                                            cmp al, bl
    74 00000076 7409                                            jz yes
    75 00000078 E2F9                                        loop while
    76                                                      
    77                                                      no:
    78 0000007A B800000000                                  mov eax, 0
    79 0000007F EB05                                        jmp end
    80                                                      yes:
    81 00000081 B801000000                                  mov eax, 1
    82                                                      end:
    83 00000086 59                                          pop ecx
    84 00000087 E2E3                                    loop for_vocala
    85 00000089 59                                      pop ecx
    86 0000008A 5E                                      pop esi
    87                                              
    88 0000008B 01C2                                    add edx, eax
    89 0000008D E2CD                                loop for_cuvant
    90 0000008F 3B15[00000000]                      cmp edx, [n]
    91 00000095 7213                                jb end_of_for
    92                                              
    93 00000097 68[07000000]                        push dword cuvant
    94 0000009C 68[4C000000]                        push dword file_format
    95 000000A1 FF15[00000000]                      call [fwrite]
    96 000000A7 83C408                              add esp, 4*2
    97                                              
    98                                              end_of_for:
    99                                          
   100 000000AA E97CFFFFFF                      jmp for
   101                                          finish:
   102                                          
   103 000000AF FF35[48000000]                  push dword [file_descriptor]
   104 000000B5 FF15[00000000]                  call [fclose]
   105 000000BB 83C404                          add esp, 4
   106                                          
   107 000000BE 6A00                            push dword 0      
   108 000000C0 FF15[00000000]                  call [exit]       
