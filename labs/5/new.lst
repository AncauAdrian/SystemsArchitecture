     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 123456                      a db 0x12, 0x34, 0x56
    15                                      len equ ($ - a)
    16 00000003 00                          sum db 0
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 B000                            mov al, 0
    22                                          
    23                                          ; for i = 0; i < len; i++
    24                                          ; al = al + a[8]
    25 00000002 BB00000000                      mov ebx, 0
    26                                         
    27                                          for:
    28 00000007 0283[00000000]                      add al, [a + ebx]
    29                                              
    30 0000000D 43                                  inc ebx
    31 0000000E 83FB03                              cmp ebx, len
    32 00000011 72F4                                jb for
    33                                      
    34 00000013 A2[03000000]                    mov [sum], al
    35                                          ; exit(0)
    36 00000018 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000001A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
