     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf            ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 616E6120617265206D-         a db "ana are mere", 0
    15 00000009 65726500           
    16 0000000D 536972756C20657374-         format db "Sirul este: %s", 0
    16 00000016 653A20257300       
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ... printf(format, a)
    22 00000000 68[00000000]                    push a
    23 00000005 68[0D000000]                    push format
    24 0000000A FF15[00000000]                  call [printf]
    25 00000010 83C408                          add esp, 4*2
    26                                      
    27                                          ; exit(0)
    28 00000013 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    29 00000015 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
