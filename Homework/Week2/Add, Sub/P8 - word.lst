     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; a,b,c,d - word
    14                                      ; (b+c+d)-(a+a)
    15                                      
    16 00000000 0100                        a dw 0x1
    17 00000002 0200                        b dw 0x2
    18 00000004 0300                        c dw 0x3
    19 00000006 0100                        d dw 0x1
    20                                      
    21 00000008 0000                        result dw 0x0
    22                                  
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 66A1[02000000]                  mov ax, [b]
    27 00000006 660305[04000000]                add ax, [c]
    28 0000000D 660305[06000000]                add ax, [d]
    29 00000014 662B05[00000000]                sub ax, [a]
    30 0000001B 662B05[00000000]                sub ax, [a]
    31                                          
    32 00000022 66A3[08000000]                  mov [result], ax
    33                                      
    34                                          ; exit(0)
    35 00000028 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000002A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
