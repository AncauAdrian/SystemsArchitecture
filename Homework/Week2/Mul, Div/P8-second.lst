     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; a,b,c,d-byte, e,f,g,h-word
    14                                      ; 2*(a+b)-e = 3
    15 00000000 03                          a db 0x3
    16 00000001 02                          b db 0x2
    17 00000002 0700                        e dw 0x7
    18                                      
    19 00000004 0000                        result dw 0x0
    20                                      
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 A0[00000000]                    mov al, [a]
    26 00000005 0205[01000000]                  add al, [b]
    27 0000000B B402                            mov ah, 2
    28 0000000D F6E4                            mul ah
    29                                          
    30 0000000F 662B05[02000000]                sub ax, [e]
    31 00000016 66A3[04000000]                  mov [result], ax
    32                                      
    33                                          ; exit(0)
    34 0000001C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 0000001E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
