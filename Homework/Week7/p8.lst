     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 614162423225784D            s db 'a', 'A', 'b', 'B', '2', '%', 'x', 'M'
    15                                      len equ ($ - s)
    16 00000008 00<rept>                    d times len db 0
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 BE[00000000]                    mov esi, s
    22 00000005 BF[08000000]                    mov edi, d
    23 0000000A B908000000                      mov ecx, len
    24 0000000F FC                              cld
    25                                          
    26                                          for:
    27 00000010 AC                                  lodsb
    28 00000011 3C41                                cmp al, 'A'
    29 00000013 7205                                jb else
    30 00000015 3C5A                                cmp al, 'Z'
    31 00000017 7701                                ja else
    32 00000019 AA                                  stosb
    33                                              
    34                                              else:
    35 0000001A E2F4                                loop for
    36                                      
    37                                          ; exit(0)
    38 0000001C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 0000001E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
