     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, scanf, printf            
     6                                  import exit msvcrt.dll    
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll  
     9                                  
    10                                  ;%include "other.asm" 
    11                                  
    12                                  segment data use32 class=data
    13 00000000 00000000                    a dd 0
    14 00000004 00000000                    b dd 0
    15 00000008 00000000                    c dd 0
    16 0000000C 00                          result db 0
    17 0000000D 25642C25642C256400          format db "%d,%d,%d", 0
    18 00000016 256400                      print_format db "%d", 0
    19                                  
    20                                  segment code use32 class=code
    21                                      calculate_sum:
    22 00000000 55                              push ebp
    23 00000001 89E5                            mov ebp, esp        ; create stack frame
    24 00000003 8B4508                          mov eax, [ebp + 8] ;eax = a
    25 00000006 03450C                          add eax, [ebp + 12]
    26 00000009 034510                          add eax, [ebp + 16]
    27                                              
    28 0000000C 5D                              pop ebp             ; destroy stack frame
    29 0000000D C20C00                          ret 4*3
    30                                          
    31                                      start:
    32 00000010 68[00000000]                    push dword a
    33 00000015 68[16000000]                    push dword print_format
    34 0000001A FF15[00000000]                  call [scanf]
    35 00000020 83C408                          add esp, 4*2
    36                                          
    37 00000023 68[04000000]                    push dword b
    38 00000028 68[16000000]                    push dword print_format
    39 0000002D FF15[00000000]                  call [scanf]
    40 00000033 83C408                          add esp, 4*2
    41                                          
    42 00000036 68[08000000]                    push dword c
    43 0000003B 68[16000000]                    push dword print_format
    44 00000040 FF15[00000000]                  call [scanf]
    45 00000046 83C408                          add esp, 4*2
    46                                          
    47 00000049 B800000000                      mov eax, 0
    48 0000004E FF35[00000000]                  push dword [a]
    49 00000054 FF35[04000000]                  push dword [b]
    50 0000005A FF35[08000000]                  push dword [c]
    51 00000060 E89BFFFFFF                      call calculate_sum
    52                                          
    53 00000065 50                              push dword eax
    54 00000066 68[16000000]                    push dword print_format
    55 0000006B FF15[00000000]                  call [printf]
    56 00000071 83C408                          add esp, 4*2
    57                                          
    58 00000074 6A00                            push dword 0      
    59 00000076 FF15[00000000]                  call [exit]       
